// *** Globally used functions ***

INCLUDE ~%MOD_FOLDER%/lib/campaigns.tph~

// Updates class description in ALL available clastext tables
DEFINE_ACTION_FUNCTION UPDATE_CLASS_DESC
INT_VAR
  newDesc = "-1"
STR_VAR
  className = ~~
BEGIN
  OUTER_SET finished = 0

  ACTION_IF (FILE_EXISTS_IN_GAME ~campaign.2da~) BEGIN
    COPY_EXISTING - ~campaign.2da~ ~override~
      COUNT_2DA_COLS cmpNumCols
      COUNT_2DA_ROWS cmpNumCols cmpNumRows
      PATCH_IF (cmpNumRows > 0) BEGIN
        READ_2DA_ENTRY 0 0 cmpNumCols cmpName
      END ELSE BEGIN
        TEXT_SPRINT cmpName ~~
      END
      PATCH_IF (NOT ~%cmpName%~ STRING_EQUAL_CASE ~WORLDSCRIPT~) BEGIN
        FOR (cmpRow = 0; cmpRow < cmpNumRows; ++cmpRow) BEGIN
          READ_2DA_ENTRY cmpRow 0 cmpNumCols cmpName
          INNER_ACTION BEGIN
            LAF GET_CAMPAIGN_INFO STR_VAR campaign = EVAL ~%cmpName%~ RET cmp_clastext END
            ACTION_IF (NOT ~%cmp_clastext%~ STRING_EQUAL ~~) BEGIN
              LAF __UPDATE_CLASS_DESC
              INT_VAR
                newDesc = newDesc
              STR_VAR
                clastextFile = EVAL ~%cmp_clastext%.2da~
                className = EVAL ~%className%~
              END
            END
          END
        END
        SET finished = 1
      END
  END

  // executed when campaign.2da is not available or empty
  ACTION_IF (finished = 0) BEGIN
    LAF __UPDATE_CLASS_DESC
    INT_VAR
      newDesc = newDesc
    STR_VAR
      clastextFile = ~clastext.2da~
      className = EVAL ~%className%~
    END
  END
END

DEFINE_ACTION_FUNCTION __UPDATE_CLASS_DESC
INT_VAR
  newDesc = "-1"
STR_VAR
  clastextFile = ~~
  className = ~~
BEGIN
  ACTION_IF (newDesc >= 0 && NOT ~%className%~ STRING_EQUAL ~~) BEGIN
    COPY_EXISTING ~%clastextFile%~ ~override~
      COUNT_2DA_COLS numCols
      COUNT_2DA_ROWS numCols numRows
      FOR (row = 0; row < numRows; ++row) BEGIN
        READ_2DA_ENTRY row 0 numCols name
        PATCH_IF (~%name%~ STRING_EQUAL_CASE ~%className%~) BEGIN
          READ_2DA_ENTRY row 4 numCols descStrref
          PATCH_IF (descStrref >= 0) BEGIN
            SET_2DA_ENTRY row 4 numCols ~%newDesc%~
            SET row = numRows
          END
        END
      END
    BUT_ONLY IF_EXISTS
  END
END


/**
 * Adds a new entry to the current CLAB table
 * INT_VAR level  The level where to add the new entry
 * STR_VAR entry  The full entry to add (including GA/AP prefix)
 * RET success    Returns nonzero on success, zero otherwise.
 */
DEFINE_PATCH_FUNCTION ADD_CLAB_ENTRY
INT_VAR
  level = 0
STR_VAR
  entry = ~~  // full entry to add (including GA/AP prefix)
RET
  success
BEGIN
  SET success = 0
  COUNT_2DA_COLS numCols
  COUNT_2DA_ROWS numCols numRows
  PATCH_IF (level > 0 AND level < numCols AND NOT ~%entry%~ STR_EQ ~~) BEGIN
    READ_2DA_ENTRY 1 0 1 defEntry
    // try adding entry to existing line first
    FOR (row = 0; row < numRows; row += 1) BEGIN
      READ_2DA_ENTRY row level numCols curEntry
      PATCH_IF (~%curEntry%~ STR_EQ ~%defEntry%~) BEGIN
        SET_2DA_ENTRY row level numCols ~%entry%~
        SET success = 1
        SET row = numRows
      END
    END
    // new CLAB line required?
    PATCH_IF (NOT success) BEGIN
      TEXT_SPRINT newRow ~ABILITY%numRows%~
      FOR (col = 1; col < numCols; col += 1) BEGIN
        PATCH_IF (col = level) BEGIN
          TEXT_SPRINT newRow ~%newRow%   %entry%~
        END ELSE BEGIN
          TEXT_SPRINT newRow ~%newRow%   %defEntry%~
        END
      END
      SET success = 1
    END
  END
END
